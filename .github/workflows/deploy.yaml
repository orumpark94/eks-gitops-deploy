name: Deploy or Destroy via Terraform

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform Action'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Ensure S3 bucket exists for Terraform state
        run: |
          BUCKET_NAME="eks-gitops-tfstate-20250415
          REGION="ap-northeast-2"
          
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "✅ S3 bucket '$BUCKET_NAME' already exists."
          else
            echo "⏳ Creating S3 bucket '$BUCKET_NAME'..."
            aws s3api create-bucket \
              --bucket "$BUCKET_NAME" \
              --region "$REGION" \
              --create-bucket-configuration LocationConstraint="$REGION"
            echo "✅ S3 bucket created."
          fi

      - name: Terraform Init
        working-directory: infrastructure/
        run: terraform init

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: infrastructure/
        run: terraform plan

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: infrastructure/
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: infrastructure/
        run: terraform destroy -auto-approve
